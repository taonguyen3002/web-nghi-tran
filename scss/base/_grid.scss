@use "sass:math";
$grid-breakpoints: (
  xxl: 1400px,
  xl: 1200px,
  lg: 992px,
  md: 768px,
  sm: 576px,
);
$container-max-widths: (
  sm: 100%,
  md: 540px,
  lg: 720px,
  xl: 960px,
  xxl: 1140px,
);
$gutters: (
  0: 0,
  1: 0.25,
  2: 0.5,
  3: 1,
  4: 1.5,
  5: 3,
);
$grid-column: 12;
$grid-gutter-width: 30px !default;
%gutter-padding {
  padding-left: calc(var(--grid-gutter-x) * 0.5);
  padding-right: calc(var(--grid-gutter-x) * 0.5);
}
.container-fluid {
  --grid-gutter-x: #{$grid-gutter-width};
  --grid-gutter-y: 0;
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  @extend %gutter-padding;
}
.container {
  @extend .container-fluid;
  width: 1370px;
}
.row {
  display: flex;
  flex-wrap: wrap;
  margin-top: calc(-1 * var(--grid-gutter-y));
  margin-left: calc(var(--grid-gutter-x) * -0.5);
  margin-right: calc(var(--grid-gutter-x) * -0.5);
  > * {
    @extend %gutter-padding;
    margin-top: var(--grid-gutter-y);
  }
}
.col {
  flex: 1 0;
}
@mixin make-media-query($dimension) {
  @media (max-width: ($dimension - 0.02)) {
    @content;
  }
}
@mixin MakeRowColumn($infix: null) {
  @for $i from 1 through $grid-column * 0.5 {
    .row-col#{$infix}-#{$i} > * {
      flex: 0 0 auto;
      width: math.div(100%, $i);
    }
  }
}
@mixin MakeCol($infix: null) {
  @for $i from 1 to ($grid-column + 1) {
    .col#{$infix}-#{$i} {
      flex: 0 0 auto;
      width: math.div(100%, $grid-column) * $i;
    }
  }
}
@mixin MakeOffset($infix: null) {
  @for $i from 1 to $grid-column {
    .offset#{$infix}-#{$i} {
      margin-left: math.div(100%, $grid-column) * $i;
    }
  }
}
@mixin MakeGutter($infix: null) {
  @each $g, $ratio in $gutters {
    .g#{$infix}-#{$g} {
      --grid-gutter-x: #{$ratio * $grid-gutter-width};
      --grid-gutter-y: #{$ratio * $grid-gutter-width};
    }
    .gx#{$infix}-#{$g} {
      --grid-gutter-x: #{$ratio * $grid-gutter-width};
    }
    .gy#{$infix}-#{$g} {
      --grid-gutter-y: #{$ratio * $grid-gutter-width};
    }
  }
}
@include MakeRowColumn();
@include MakeCol();
@include MakeOffset();
@include MakeGutter();
@each $breakpoint, $dimension in $grid-breakpoints {
  @include make-media-query($dimension) {
    $infix: "-#{$breakpoint}";
    $MaxWidth: map-get($container-max-widths, $breakpoint);
    .container {
      max-width: $MaxWidth;
    }
    @include MakeRowColumn($infix);
    @include MakeCol($infix);
    @include MakeOffset($infix);
    @include MakeGutter($infix);
  }
}
